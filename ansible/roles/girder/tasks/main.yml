- name: Add nodejs PPA
  apt_repository: repo='ppa:chris-lea/node.js' update_cache=no
  sudo: yes
  tags: girder

- name: Add MongoDB repo key
  command: apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10
  sudo: yes
  tags: girder

- name: Add MongoDB PPA
  apt_repository: repo='deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' update_cache=yes
  sudo: yes
  tags: girder

- name: Install package dependencies
  apt: name={{ item }} state=present
  sudo: yes
  tags: girder
  with_items:
    - curl
    - g++
    - libffi-dev
    - nodejs
    - mongodb-org-server
    - mongodb-org-shell
    - mongodb-org-tools
    - python3-pymongo
    - python3-gridfs
    - python3-bson

- name: Install grunt and grunt-cli globally
  npm: name={{ item }} global=yes
  sudo: yes
  tags: girder
  with_items:
    - grunt
    - grunt-cli

- name: Enable MongoDB full-text search
  lineinfile: dest=/etc/mongod.conf regexp=^setParameter= line=setParameter=textSearchEnabled=true
  sudo: yes
  tags: girder
  notify:
    - restart mongodb

- name: Clone Girder from GitHub
  git: repo=https://github.com/girder/girder.git version=master dest=/opt/mongochem/girder
  sudo: no
  tags: girder

- name: Install Girder specified requirements
  pip: executable=pip3 requirements=/opt/mongochem/girder/requirements.txt
  sudo: yes
  tags: girder

- name: Compile bcrypt (see https://github.com/pyca/bcrypt/issues/15)
  command: python3 -c "import bcrypt"
  sudo: yes
  tags: girder

- name: Install Girder local configuration file
  copy: src=../files/girder.local.cfg dest=/opt/mongochem/girder/girder/conf/girder.local.cfg
  tags: girder

- name: Install Girder web frameworks using npm
  npm: path=/opt/mongochem/girder
  tags: girder

- name: Run grunt init
  command: grunt init chdir=/opt/mongochem/girder
  tags: girder

- name: Run grunt
  command: grunt chdir=/opt/mongochem/girder
  tags: girder

- name: Symlink molecules Girder plugin
  file: src=/opt/mongochem/server/girder/molecules dest=/opt/mongochem/girder/plugins/molecules state=link
  tags: girder

- name: Install Girder as a service
  copy: src=../files/girder.conf dest=/etc/init/girder.conf mode=644 owner=root
  sudo: yes
  tags: girder

- name: Start Girder as a service
  service: name=girder state=restarted enabled=yes
  sudo: yes
  tags: girder

# Now setup the require users/plugins/resources
- name: Setup Girder base URL fact
  set_fact:
    girder_base_url: http://{{girder_host}}:{{girder_port}}
  tags:
    - girder
    - girder_setup

- name: Setup Girder api URL fact
  set_fact:
    girder_api_url: "{{girder_base_url}}/api/v1"
  tags:
    - girder
    - girder_setup

- name: Log in as mongochem admin
  shell: "curl -u {{mongochem_admin_user}}:{{mongochem_admin_password}} {{girder_api_url}}/user/authentication"
  register: token_response
  tags:
    - girder
    - girder_setup

- name: Create admin mongochem user if we don't already have the user
  shell: "curl --data \"login={{mongochem_admin_user}}&firstName=mongochem&lastName=admin&password={{mongochem_admin_password}}&email={{mongochem_admin_email}}&admin=true\" {{girder_api_url}}/user"
  register: admin_user_response
  tags:
    - girder
    - girder_setup
  when: (token_response.stdout|from_json).authToken is not defined

# Logging in again to ensure that we have a valid token regardless if we needed to create the user
- name: Log in as mongo admin
  shell: "curl -u {{mongochem_admin_user}}:{{mongochem_admin_password}} {{girder_api_url}}/user/authentication"
  register: token_response
  tags:
    - girder
    - girder_setup

# Set Girder token as a fact for easy access
- name: Setup Girder token fact
  set_fact:
    girder_token: "{{(token_response.stdout|from_json).authToken.token}}"
  tags:
    - girder
    - girder_setup

# Enable plugins require for mongochem
- name: Enable girder plugins
  shell: "curl -X PUT --data 'plugins={{girder_plugins|to_json}}&token={{girder_token}}' {{girder_api_url}}/system/plugins"
  notify:
    - restart girder
  tags:
    - girder
    - girder_setup

- name: Setup OAuth fact
  set_fact:
    oauth_settings: [{"key":"oauth.google_client_id","value": "{{oauth_google_client_id}}"}, {"key":"oauth.google_client_secret","value": "{{oauth_google_client_secret}}"}]
  tags:
    - girder
    - girder_setup

# Now configure that OAuth plugin
- name: Configure OAuth plugin
  shell: "curl -X PUT --data 'list={{oauth_settings|to_json}}&token={{girder_token}}' {{girder_api_url}}/system/setting"
  tags:
    - girder
    - girder_setup

- name: Create directory for asset store
  sudo: yes
  file: dest={{file_system_asset_store_root}} mode=755 owner=mongochemdev group=mongochemdev state=directory
  tags:
    - girder
    - girder_setup

# Create a filesystem asset store
- name: Create an filesystem asset store
  shell: "curl --data 'type=0&name={{file_system_asset_store_name}}&root={{file_system_asset_store_root}}&token={{girder_token}}' {{girder_api_url}}/assetstore"
  tags:
    - girder
    - girder_setup

# Add some sample data
- name: Copy sample data to remote host
  copy: src=../files/mongodump_molecules dest=/tmp
  tags:
    - girder
    - girder_setup

- name: Add sample molecules to database
  shell: "mongorestore --drop /tmp/mongodump_molecules"
  tags:
    - girder
    - girder_setup

- name: Cleanup sample data from remote host
  file: path=/tmp/mongodump_molecules state=absent
  tags:
    - girder
    - girder_setup
