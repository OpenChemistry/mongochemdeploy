- name: Setting up Girder
  hosts: localhost
  vars:
    required_ansible_version: 2.1.0
  tasks:
    - fail: msg="Playbook requires ansible >= {{required_ansible_version}}"
      when: ansible_version.string|version_compare(required_ansible_version, '<')
    - name: Set some facts
      set_fact:
        girder_host: "{{girder_host|default('localhost')}}"
        girder_port: "{{girder_port|default(8080)}}"
        girder_scheme: "{{girder_scheme|default(http)}}"
        girder_api_root: "{{girder_api_root|default('/api/v1')}}"

    - name: Create Girder monogchem user
      girder:
        host: "{{girder_host}}"
        port: "{{girder_port}}"
        scheme: "{{girder_scheme}}"
        apiRoot: "{{girder_api_root}}"
        user:
          firstName: "mongochem"
          lastName: "mongochem"
          login: "mongochem"
          password: "{{ mongochem_password }}"
          email: "mongochem@kitware.com"
          admin: yes
        state: present

    - name: Create Girder cumulus user
      girder:
        host: "{{girder_host}}"
        port: "{{girder_port}}"
        scheme: "{{girder_scheme}}"
        apiRoot: "{{girder_api_root}}"
        username: "mongochem"
        password: "{{ mongochem_password }}"
        user:
          firstName: "cumulus"
          lastName: "cumulus"
          login: "cumulus"
          password: "{{ cumulus_password }}"
          email: "cumulus@kitware.com"
          admin: yes
        state: present

    - name: Create Girder cumulus group
      girder:
        host: "{{girder_host}}"
        port: "{{girder_port}}"
        scheme: "{{girder_scheme}}"
        apiRoot: "{{girder_api_root}}"
        username: "mongochem"
        password: "{{ mongochem_password }}"
        group:
          name: "cumulus"
          description: "The cumulus group"
          users:
            - login: cumulus
              type: member

    - name: Enable cumulus plugins
      girder:
        host: "{{girder_host}}"
        port: "{{girder_port}}"
        scheme: "{{girder_scheme}}"
        apiRoot: "{{girder_api_root}}"
        username: "mongochem"
        password: "{{ mongochem_password }}"
        plugins:
          - cumulus
          - sftp
          - newt
          - taskflow
        state: present

    - name: Enable OC plugin
      girder:
        host: "{{girder_host}}"
        port: "{{girder_port}}"
        scheme: "{{girder_scheme}}"
        apiRoot: "{{girder_api_root}}"
        username: "mongochem"
        password: "{{ mongochem_password }}"
        plugins:
          - molecules
        state: present

    - name: Enable NEWT plugin
      girder:
        host: "{{girder_host}}"
        port: "{{girder_port}}"
        scheme: "{{girder_scheme}}"
        apiRoot: "{{girder_api_root}}"
        username: "mongochem"
        password: "{{ mongochem_password }}"
        plugins:
          - newt
        state: present
      when: nersc is defined

    - name: Create filesystem assetstore
      girder:
        host: "{{girder_host}}"
        port: "{{girder_port}}"
        scheme: "{{girder_scheme}}"
        apiRoot: "{{girder_api_root}}"
        username: "mongochem"
        password: "{{ mongochem_password }}"
        assetstore:
          name: "Filesystem Assetstore"
          type: "filesystem"
          root: "/assetstore"
          current: true
        state: present

    - name: Restart the server
      girder:
        host: "{{girder_host}}"
        port: "{{girder_port}}"
        scheme: "{{girder_scheme}}"
        apiRoot: "{{girder_api_root}}"
        username: "mongochem"
        password: "{{ mongochem_password }}"
        put:
          path: "system/restart"

    - name: Wait until server restarts
      wait_for:
        port="{{girder_port}}"
        delay=5
