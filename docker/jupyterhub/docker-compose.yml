# Copyright (c) Jupyter Development Team.
# Distributed under the terms of the Modified BSD License.

# JupyterHub docker-compose configuration file
#
# Derived from https://github.com/jupyterhub/jupyterhub-deploy-docker/blob/master/docker-compose.yml

version: "2"

services:
  hub-db:
    image: postgres:latest
    container_name: jupyterhub-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${DB_VOLUME_CONTAINER}
    env_file:
      - ${JUPYTERHUB_DOCKER_DIR}secrets/postgres.env
    volumes:
      - "db:${DB_VOLUME_CONTAINER}"

  hub:
    depends_on:
      - hub-db
    build:
      context: ${JUPYTERHUB_DOCKER_DIR}
      dockerfile: Dockerfile.jupyterhub
    image: openchemistry/jupyterhub:oc
    container_name: jupyterhub
    volumes:
      # Bind Docker socket on the host so we can connect to the daemon from
      # within the container
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
      # Bind Docker volume on host for JupyterHub database and cookie secrets
      - "data:${DATA_VOLUME_CONTAINER}"
    ports:
      - 127.0.0.1:8000:8000
    links:
      - hub-db
    environment:
      DOCKER_NETWORK_NAME: ${DOCKER_NETWORK_NAME}
      # JupyterHub will spawn this Notebook image for users
      DOCKER_NOTEBOOK_IMAGE: ${DOCKER_NOTEBOOK_IMAGE}
      # Using this run command (optional)
      DOCKER_SPAWN_CMD: ${DOCKER_SPAWN_CMD}
      # Postgres db info
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: hub-db
      GIRDER_API_URL: ${GIRDER_API_URL}
      GIRDER_SCHEME: ${GIRDER_SCHEME}
      GIRDER_HOST: ${GIRDER_HOST}
      GIRDER_PUBLIC_API_URL: ${GIRDER_PUBLIC_API_URL}
      GIRDER_PORT: ${GIRDER_PORT}
      OC_SITE: ${OC_SITE}
      ORIGIN: ${ORIGIN}
      # For dev
      OPENCHEMISTRYPY: ${OPENCHEMISTRYPY}
      JUPTERLAB_APP_DIR: ${JUPTERLAB_APP_DIR}
      OC_JUPYTERHUB_URL: ${OC_JUPYTERHUB_URL}
      APP_BASE_URL: ${APP_BASE_URL}
    env_file:
      - ${JUPYTERHUB_DOCKER_DIR}secrets/postgres.env
    command:
      jupyterhub --debug -f /srv/jupyterhub/jupyterhub_config.py
    dns: 8.8.8.8
volumes:
  data:
  db:

