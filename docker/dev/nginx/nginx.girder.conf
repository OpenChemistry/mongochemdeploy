map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

upstream jhub {
    server hub:8000 max_fails=10 fail_timeout=30;
}

upstream girder_server {
    server girder:8080 max_fails=10 fail_timeout=30;
}

upstream client {
    server client max_fails=10 fail_timeout=30;
}



server {
    listen 8888;

    root                /usr/share/nginx/html;

    server_name         localhost;

    resolver 127.0.0.11;

    # jupyterjub
    location /jupyterhub/ {
        proxy_pass http://jhub/jupyterhub/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        # This allows us to stop our servers from $host ( app logout )
        # otherwise jupyterhub rejects the request.
        proxy_set_header Referer $host/jupyterhub/hub/;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    # Girder
    location /api/v1 {
        proxy_redirect      off;
        proxy_set_header    Host $host;
        #proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-Host $host:$server_port;
        proxy_set_header    X-Forwarded-Server $host;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass          http://girder_server/api/v1;

        proxy_buffering off;
        proxy_cache off;
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        chunked_transfer_encoding off;
        proxy_read_timeout 600s;
        proxy_send_timeout 600s;
    }

    location /api/static {
        proxy_pass          http://girder_server/static;
    }

    location / {
        proxy_pass http://client;
    }

    client_max_body_size 500M;
}
